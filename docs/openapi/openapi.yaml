openapi: 3.0.3
info:
  title: Som Energia Infoenergia API
  description: 'API for exchange contract information'
  termsOfService: https://www.somenergia.coop/ca/avis-legal/
  contact:
    email: info@somenergia.coop
  license:
    name: AGPL-3.0
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  version: 2.2.0
servers:
- url: https://apinergia.somenergia.coop
tags:
- name: authentication
  description: User authentication endpoint
- name: contracts
  description: All information about a contract
- name: modcontracts
  description: All information about contract modifications
- name: f1
  description: All information about contract f1 measurements
- name: cch
  description: All hourly curves
- name: measurements
  description: All information about contract energy measurements
- name: tariff
  description: Tariff pricelist
- name: reports
  description: Reports to infoenergia
paths:
  /auth:
    post:
      tags:
      - authentication
      summary: Logs user into the system
      operationId: server.basic_auth
      requestBody:
        $ref: "#/components/requestBodies/AuthBodyRequest"
      responses:
        200:
          $ref: "#/components/responses/AuthResponse"
        400:
          $ref: "#/components/responses/BadAuthRequestResponse"
        401:
          $ref: "#/components/responses/UnauthorizedResponse"
  /contracts:
    get:
      tags:
      - contracts
      summary: Obtain contract information
      description: Get contracts information depending on date and tariff parameters
      operationId: server.get_contracts
      parameters:
        - $ref: "#/components/parameters/tariffsParam"
        - $ref: "#/components/parameters/fromParam"
        - $ref: "#/components/parameters/toParam"
        - $ref: "#/components/parameters/juridicalParam"
        - $ref: "#/components/parameters/cursorParam"
      responses:
        200:
          $ref: "#/components/responses/ContractsResponse"
        400:
          $ref: "#/components/responses/BadRequestResponse"
        401:
          $ref: "#/components/responses/UnauthorizedResponse"
      security:
        - infoenergiaAuth: []
  /contracts/{contractId}:
    get:
      tags:
        - contracts
      summary: Find a contract by ID
      description: Returns a single contract
      operationId: server.get_contract_by_id
      parameters:
        - $ref: "#/components/parameters/contractIDParam"
      responses:
        200:
          $ref: "#/components/responses/ContractResponse"
        400:
           $ref: "#/components/responses/BadRequestResponse"
        401:
           $ref: "#/components/responses/UnauthorizedResponse"
      security:
        - infoenergiaAuth: []
  /contracts/{contractId}/tariff:
    get:
      tags:
        - contracts
      summary: Find the tariff for a contract ID
      description: Get the detailed tariff prices a contract (note that if no date is specified you'll get the current tariff alone)
      operationId: server.get_tariff_by_contract_id
      parameters:
        - $ref: "#/components/parameters/contractIDParam"
        - $ref: "#/components/parameters/taxesParam"
      responses:
        200:
          description: tariff price for a contract ID
          content:
            application/json:
              schema:
                $ref: '#/components/responses/ContractTariffResponse'
              examples:
                tariff-response:
                  $ref: "#/components/examples/tariff-price-single-contract-response-example"
        400:
           $ref: "#/components/responses/BadRequestResponse"
        401:
           $ref: "#/components/responses/UnauthorizedResponse"
      security:
        - infoenergiaAuth: []
  /modcontracts:
    get:
      tags:
      - modcontracts
      summary: Obtain all contracts with contract amendments.
      description: Get all contracts with one or more contract amendments by date and type.
      operationId: server.get_modcontracts
      parameters:
        - $ref: "#/components/parameters/modconTypeParam"
        - $ref: "#/components/parameters/fromParam"
        - $ref: "#/components/parameters/toParam"
        - $ref: "#/components/parameters/juridicalParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/cursorParam"
      responses:
        200:
          $ref: "#/components/responses/ModconsResponse"
        400:
           $ref: "#/components/responses/BadRequestResponse"
        401:
           $ref: "#/components/responses/UnauthorizedResponse"
      security:
        - infoenergiaAuth: []
  /modcontracts/{contractId}:
    get:
      tags:
      - modcontracts
      summary: Obtain contract amendments by contract ID.
      description: Get one or more contract amendments by date and type for a specific contract.
      operationId: server.get_modcontracts_by_id
      parameters:
        - $ref: "#/components/parameters/contractIDParam"
        - $ref: "#/components/parameters/modconTypeParam"
        - $ref: "#/components/parameters/fromParam"
        - $ref: "#/components/parameters/toParam"
        - $ref: "#/components/parameters/juridicalParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/cursorParam"
      responses:
        200:
          $ref: "#/components/responses/ModconResponse"
        400:
           $ref: "#/components/responses/BadRequestResponse"
        401:
           $ref: "#/components/responses/UnauthorizedResponse"
      security:
        - infoenergiaAuth: []
  /f1:
    get:
      tags:
      - f1
      summary: Obtain all F1 information
      description: Get detailed F1 information depending on date and tariff parameters
      operationId: server.get_f1_measures
      parameters:
        - $ref: "#/components/parameters/tariffsParam"
        - $ref: "#/components/parameters/fromParam"
        - $ref: "#/components/parameters/toParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/cursorParam"
      responses:
        200:
          $ref: "#/components/responses/F1sResponse"
        400:
           $ref: "#/components/responses/BadRequestResponse"
        401:
           $ref: "#/components/responses/UnauthorizedResponse"
      security:
        - infoenergiaAuth: []
  /f1/{contractId}:
    get:
      tags:
      - f1
      summary: Get all F1 by contractID
      description: Returns all F1 files for a contract
      operationId: server.get_f1_measures_by_contract_id
      parameters:
        - $ref: "#/components/parameters/contractIDParam"
        - $ref: "#/components/parameters/fromParam"
        - $ref: "#/components/parameters/toParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/cursorParam"
      responses:
        200:
          $ref: "#/components/responses/F1Response"
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Contract not found
          content: {}
      security:
        - infoenergiaAuth: []
  /cch:
    get:
      tags:
      - cch
      summary: Obtain hourly curves
      description: |
        Get hourly curves information depending on type of curve, date or tariff parameters
        For convinience, if it is limited by `to_`, the first measure of the next day is included as well.
        `date` is the start of the measure period (the measure is obtained at the end of that period).
      operationId: server.get_cch
      parameters:
        - $ref: "#/components/parameters/cchTypeParam"
        - $ref: "#/components/parameters/tariffsParam"
        - $ref: "#/components/parameters/fromParam"
        - $ref: "#/components/parameters/toParam"
        - $ref: "#/components/parameters/cchDownloadedFromParam"
        - $ref: "#/components/parameters/cchDownloadedToParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/cursorParam"
      responses:
        200:
          $ref: "#/components/responses/CCHResponse"
        400:
           $ref: "#/components/responses/BadRequestResponse"
        401:
           $ref: "#/components/responses/UnauthorizedResponse"
      security:
        - infoenergiaAuth: []
  /cch/{contractId}:
    get:
      tags:
      - cch
      summary: Obtain cch curves for a especific contract
      description: |
        Get cch curves information depending on some date and tariff parameters for a specific contract.
        For convinience, if it is limited by `to_`, the first measure of the next day is included as well.
        `date` is the start of the measure period (the measure is obtained at the end of that period).
      operationId: server.get_cch_by_contract_id
      parameters:
        - $ref: "#/components/parameters/contractIDParam"
        - $ref: "#/components/parameters/cchTypeParam"
        - $ref: "#/components/parameters/tariffsParam"
        - $ref: "#/components/parameters/fromParam"
        - $ref: "#/components/parameters/toParam"
        - $ref: "#/components/parameters/cchDownloadedFromParam"
        - $ref: "#/components/parameters/cchDownloadedToParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/cursorParam"
      responses:
        200:
          $ref: "#/components/responses/CCHResponse"
        400:
           $ref: "#/components/responses/BadRequestResponse"
        401:
           $ref: "#/components/responses/UnauthorizedResponse"
      security:
        - infoenergiaAuth: []
  /tariff:
      get:
        tags:
        - tariff
        summary: Obtain tariff prices
        description: Get all detailed prices for each tariff (note that if no date is specified you'll get the current tariff alone)
        operationId: server.get_tariff
        parameters:
          - $ref: "#/components/parameters/tariffsParam"
          - $ref: "#/components/parameters/tariffPriceIdParam"
          - $ref: "#/components/parameters/fromParam"
          - $ref: "#/components/parameters/toParam"
          - $ref: "#/components/parameters/taxesParam"
          - $ref: "#/components/parameters/geographicalRegionParam"
          - $ref: "#/components/parameters/limitParam"
          - $ref: "#/components/parameters/cursorParam"
        responses:
          200:
            description: Tariff prices
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TariffResponse'
                examples:
                  tariff-response:
                    $ref: "#/components/examples/tariff-response-example"
          400:
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
                examples:
                  badrequest-response:
                    $ref: "#/components/examples/badrequest-response-example"
        security:
          - infoenergiaAuth: []
  /tariff/indexed:
    get:
      tags:
      - tariff
      summary: Obtain indexed tariff prices
      description: Get all detailed prices for energy consumption for all hours **without taxes**
      parameters:
        - $ref: "#/components/parameters/tariffsParam"
        - $ref: "#/components/parameters/fromParam"
        - $ref: "#/components/parameters/toParam"
        - $ref: "#/components/parameters/geographicalRegionParam"
        - $ref: "#/components/parameters/limitParam"
        - $ref: "#/components/parameters/cursorParam"
      responses:
        200:
          description: hourly prices for an indexed tariff
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnergyIndexedTariffResponse'
              examples:
                energy-indexed-tariff-response:
                  $ref: "#/components/examples/energy-indexed-tariff-response-example"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                badrequest-response:
                  $ref: "#/components/examples/badrequest-response-example"
      security:
        - infoenergiaAuth: []
  /reports:
    post:
      tags:
      - reports
      summary: Hook to notify that inforenergia reports are ready
      operationId: server.reports
      requestBody:
        $ref: "#/components/requestBodies/ReportRequestBody"
      responses:
        200:
          $ref: "#/components/responses/ReportsResponse"
        400:
           $ref: "#/components/responses/BadRequestResponse"
        401:
           $ref: "#/components/responses/UnauthorizedResponse"
      security:
        - infoenergiaAuth: []
components:
  securitySchemes:
    infoenergiaAuth:
      type: http
      scheme: bearer
      bearerFormat: Bearer
  parameters:
    fromParam:
      name: from_
      in: query
      description: >
        Filter results from the date specified.
        Must be in **YYYY-MM-DD** format.
        Local time is considered for comparision.
      required: false
      style: form
      schema:
        type: string
        format: date
        example: '2019-08-01'
    toParam:
      name: to_
      in: query
      description: >
        Filter results until this date, included. Must be in **YYYY-MM-DD** format and **greater or equal than from_** param.
        Local time is considered for comparision.
      required: false
      style: form
      schema:
        type: string
        format: date
        example: '2019-08-10'
    limitParam:
      name: limit
      in: query
      description: How many results could be returned at once
      required: false
      schema:
        type: integer
        minimum: 1
        default: 50
        maximum: 500
    cursorParam:
      name: cursor
      in: query
      description: Actual cursor for this search
      required: false
      schema:
        type: string
        format: byte
        default: None
        example: 'dXNlcjpXMDdRQ1JQQTQ='
    tariffsParam:
      name: type
      in: query
      description: Choose a tariff to filter
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - "2.0TD"
          - "2.0A"
          - "2.1A"
          - "2.0DHA"
          - "2.0DHS"
          - "2.1DHA"
          - "2.1DHS"
          - "3.0TD"
          - "3.0A"
          - "3.1A"
          - "3.1A-LB"
          - "6.1"
          - "6.1A"
          - "6.1B"
    tariffPriceIdParam:
      name: tariffPriceId
      in: query
      description: Choose a tariff ID to filter
      required: false
      explode: false
      schema:
        type: integer
    taxesParam:
      name: withTaxes
      in: query
      description: Choose a if you want the tariff prices with taxes
      required: false
      explode: false
      schema:
        type: boolean
        default: false
    geographicalRegionParam:
      name: geographicalRegion
      description: Choose a geographical region if 'withTaxes' filter is being used (the taxes depend on the region)
      in: query
      required: false
      explode: false
      schema:
        type: string
        enum:
          - canarias
          - peninsula
    juridicalParam:
      name: judiric_type
      in: query
      description: Filter contracts by juridic type (physical_person or juridic_person).
      required: false
      style: form
      explode: true
      schema:
        type: string
        enum:
          - physical_person
          - juridic_person
    contractIDParam:
      name: contractId
      in: path
      description: ID of contract to return
      required: true
      schema:
        type: string
    modconTypeParam:
      name: type
      in: query
      description: Filter by different types of contract modification
      required: true
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - canceled
            - tariff_power
    cchTypeParam:
      name: type
      in: query
      description: >
        type of hourly curve. You can choose from:

        - **tg_cchfact:** Curve used for billing. It has F5D format and should not have holes

        - **tg_cchval:** Validated curve. Includes only the hourly records validated by the meter. It has P5D format

        - **tg_f1**: Curve used for billing. It has F1 format and should not have holes

        - **P1:** Validated curve. Includes only the hourly records validated by the meter. It has P1 format

        - **P2:** Validated curve. Includes curves every fifteen minutes validated by the meter. It has P2 format

        - **tg_gennetabeta:** Any collective generation entitled for the supply point by means of the Beta coefficients. It has B5D format.

        - **tg_autocons:** The fraction of the collective generation from tg_gennetabeta that has been used as autoconsumption. It has A5D format.

      required: true
      style: form
      explode: false
      schema:
        type: string
        default: tg_cchfact
        enum:
            - tg_cchfact
            - tg_cchval
            - tg_f1
            - tg_gennetabeta
            - tg_autocons
            - P1
            - P2
    cchDownloadedFromParam:
      name: downloaded_from
      in: query
      description: Get all CCH downloaded from this date on at 00:00 hours. In format YYYY-MM-DD
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
        example: '2019-08-01'
    cchDownloadedToParam:
      name: downloaded_to
      in: query
      description: Get all CCH downloaded until this date at 00:00 hours. In format YYYY-MM-DD
      required: false
      style: form
      explode: true
      schema:
        type: string
        format: date
        example: '2019-08-10'
  requestBodies:
    AuthBodyRequest:
      description: Required body to authenticate a user into the infoenergia api
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthBody"
          examples:
            auth-body-example:
              $ref: "#/components/examples/auth-body-example"
    ReportRequestBody:
        description: Contains a json with the contract id information that will be retrieved in the beedata api
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportBody'
  responses:
    AuthResponse:
      description: Returns a valid access token to make authenticated requests
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AccessToken"
          examples:
            auth-response-example:
              $ref: "#/components/examples/auth-response-example"
    BadAuthRequestResponse:
      description: This response is generated if you have not send all auth fields.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            unauthorized-response-example:
              $ref: "#/components/examples/badauthrequest-response-example"
    BadRequestResponse:
      description: This responses is generated if you have built incorrectly your request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            badrequest-response-example:
              $ref: "#/components/examples/badrequest-response-example"
    UnauthorizedResponse:
      description: If you try to request some endpoint, and you are not authorized, the api will answer you with this response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            unauthorized-response-example:
              $ref: "#/components/examples/unauthorized-response-example"
    ContractsResponse:
      description: Returns a set of contracts with the number of results and the corresponding data. If the request is paginated, returns the next page cursor and the next page url.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ContractsList"
          examples:
            contracts-response-example:
              $ref: "#/components/examples/contracts-response-example"
    ContractResponse:
      description: Returns a contract with the number of results and the corresponding data. If the request is paginated, returns the next page cursor and the next page url.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SingleContract"
          examples:
            single-contract-response-example:
              $ref: "#/components/examples/single-contract-response-example"
    ContractTariffResponse:
      description: Returns the tariff prices for a contract with the number of results and the corresponding data. If the request is paginated, returns the next page cursor and the next page url.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SingleContractTariffPrice"
          examples:
            tariff-price-single-contract-response-example:
              $ref: "#/components/examples/tariff-price-single-contract-response-example"
    ModconsResponse:
      description: Returns a set of contracts that have been modified with the number of results and the corresponding data. If the request is paginated, return the next page cursor and the next page url
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ContractsList"
          examples:
            modcontracts-response-example:
              $ref: "#/components/examples/modcontracts-response-example"
    ModconResponse:
      description: Returns the last modification of the contract with the id `contractID`
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SingleContract"
          examples:
            single-modcontract-response-example:
              $ref: "#/components/examples/single-modcontract-response-example"
    F1sResponse:
      description: Returns a set of period consumptions in a time range.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/F1sList"
          examples:
            f1s-response-example:
              $ref: "#/components/examples/f1s-response-example"
    F1Response:
      description: Returns a set of period consumptions in a time range for a specific contract.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/F1sList"
          examples:
            f1s-single-contract-response-example:
              $ref: "#/components/examples/f1s-single-contract-response-example"
    CCHResponse:
      description: >
        Returns a set of points of a specific cchtype in a time range, arranged by date.


        **Warning:** The schema of the response is only for cchfact points. In the examples you can access a sample of each type of curve points.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CCH"
          examples:
            tgcchfact-response-example:
              $ref: "#/components/examples/tgcchfact-response-example"
            tgcchval-response-example:
              $ref: "#/components/examples/tgcchval-response-example"
            tgf1-response-example:
              $ref: "#/components/examples/tgf1-response-example"
            p1-response-example:
              $ref: "#/components/examples/p1-response-example"
            p2-response-example:
              $ref: "#/components/examples/p2-response-example"
    ReportsResponse:
      description: Returns a contract with the number of results and the corresponding data. If the request is paginated, returns the next page cursor and the next page url.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReportResponse"
          examples:
            report-response-example:
              $ref: "#/components/examples/report-response-example"
    TariffResponse:
      description: Returns the tariff prices with the number of results and the corresponding data. If the request is paginated, return the next page cursor and the next page url.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Tariff"
          examples:
            modcontracts-response-example:
              $ref: "#/components/examples/tariff-response-example"
    EnergyIndexedTariffResponse:
      description: Returns the energy indexed tariff prices for all hours, with the number of results and the corresponding data. If the request is paginated, return the next page cursor and the next page url.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EnergyIndexedTariff"
          examples:
            energy-indexed-tariff-response-example:
              $ref: "#/components/examples/energy-indexed-tariff-response-example"
  schemas:
    ReportBody:
      type: object
      properties:
        id:
          type: integer
          format: int64
        contract_ids:
          type: array
          items:
            type: string
          example: ["0000001", "0000002"]
        type:
          type: string
          description: type of report
          example: "infoenergia"
        create_at:
          type: string
          format: date-time
          description: json creation date
          example: "2020-01-01"
        month:
          type: string
          description: month of json data
          example: "202001"
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        token:
          type: string
        active:
          type: boolean
    Contract:
      type: object
      properties:
        contractId:
          type: string
          description: contract ID
          example: contractId-123
        ownerId:
          type: string
          description: owner ID
          example: ownerId-123
        payerId:
          type: string
          description: payer ID (should be the same as the owner id)
          example: signerId-123
        dateStart:
          type: string
          format: date-time
          description: contract activation date
          example: "2013-10-11T16:37:05Z"
        dateEnd:
          type: string
          nullable: true
          description: contract cancelation date
          example: null
        autoconsumo:
          type: object
          description: selfconsumption information
          items:
            type: object
            properties:
              selfConsumptionType:
                type: string
                description: Type of selfconsumption
              installerPower:
                type: number
                format: float
                description: Total generators installed power
          example:
            {
              "selfConsumptionType": "[00] - Sin Autoconsumo",
              "installerPower": "4.0"
            }
        juridicType:
          type: string
          description: juridic type (physical or juridc person)
          example: "physicalPerson"
        tariffId:
          type: string
          description: contracted tariff name
          example:  "2.0TD"
        tariff_:
          type: object
          description: tariff information
          items:
            type: object
            properties:
              tariffId:
                type: string
                description: tariff name
              tariffPriceId:
                type: number
                format: integer
                description: price id for contracted tariff (see tariff endpoint)
              dateStart:
                type: string
                format: date-time
              dateEnd:
                type: string
                format: date-time
          example:
              {
                "tariff":"2.0A",
                "tariffCostId": 123,
                "dateStart": "2019-08-11T00:00:00Z",
                "dateEnd": null
              }
        tariffHistory:
          type: array
          description: tariff history
          items:
            type: object
            properties:
              tariffId:
                type: string
              tariffPriceId:
                type: number
                format: integer
                description: price id for contracted tariff (see tariff endpoint)
              dateStart:
                type: string
                format: date-time
              dateEnd:
                type: string
                format: date-time
          example:
            {
              "tariff": "2.0A",
              "tariffCostId": 123,
              "dateStart": "2019-08-11T00:00:00Z",
              "dateEnd": "2019-08-11T00:00:00Z",
            }
        power:
          type: integer
          format: int64
          description: contracted power by period
          example:
            {
              "P1": 20000,
              "P2": 20000,
              "P3": 30000
            }
        power_:
          type: object
          description: power information
          items:
            type: object
            properties:
              power:
                type: integer
                description: contracted power by period
              dateStart:
                type: string
                format: date-time
              dateEnd:
                type: string
                format: date-time
              measurement_point:
                type: string
          example:
              {
                "power": {
                  "P1": 20000,
                  "P2": 20000,
                  "P3": 20000
                },
                "dateStart": "2019-08-11T00:00:00Z",
                "dateEnd": null,
                "measurement_point": "05"
              }
        powerHistory:
          type: array
          description: power history of a contract
          items:
            type: object
            properties:
              power:
                type: integer
              dateStart:
                type: string
                format: date-time
              dateEnd:
                type: string
                format: date-time
              measurement_point:
                type: string
          example:
              {
                "power": 123,
                "dateStart": "2019-08-11T00:00:00Z",
                "dateEnd": "2019-08-11T00:00:00Z",
                "measurement_point": "05"
              }
        climaticZone:
          type: string
          description:  climatic zone code
          example: "climaticZone-1"
        activityCode:
          type: string
          description: activity code plus description
          example: "activityCode - activityCodeDescription"
        customer:
          type: object
          description: contract owner
          items:
            type: object
            properties:
              customerId:
                type: integer
              address:
                type: object
                items:
                  type: object
                  properties:
                    buildingId:
                      type: string
                    city:
                      type: string
                    cityCode:
                      type: string
                    countryCode:
                      type: string
                    country:
                      type: string
                    postalCode:
                      type: string
                    province:
                      type: string
                    provinceCode:
                      type: string
                    parcelNumber:
                      type: string
              meteringPointId:
                type: string
                description: metering point ID
              buildingData:
                type: object
                description: details on building conditions
                items:
                  type: object
                  properties:
                    buildingConstructionYear:
                      type: integer
                      format: date
                      description: construction year
                    dwellingArea:
                      type: integer
                      description: area of residence
                    propertyType:
                      type: string
                      description: type of residence
                    buildingType:
                      type: string
                      description: type of building
                    dwellingPositionInBuilding:
                      type: string
                      description: residence floor
                    dwellingOrientation:
                      type: string
                      description: orientation
                    buildingWindowsType:
                      type: string
                      description: type of windows
                    buildingWindowsFrame:
                      type: string
                      description: type of windows frame
                    buildingCoolingSource:
                      type: string
                      description: cooling source
                    buildingHeatingSource:
                      type: string
                      description: heating source
                    buildingHeatingSourceDhw:
                      type: string
                      description: type of dwh heating source
                    buildingSolarSystem:
                      type: string
                      description: type of solar installation
              profile:
                type: object
                description: details on residents
                items:
                  type: object
                  properties:
                    totalPersonsNumber:
                      type: integer
                      description: total number of persons
                    minorsPersonsNumber:
                      type: integer
                      description: number of minors
                    workingAgePersonsNumber:
                      type: integer
                      description: number of working persons
                    retiredAgePersonsNumber:
                      type: integer
                      description: number of retired persons
                    malePersonsNumber:
                      type: integer
                      description: number of male persons
                    femalePersonsNumber:
                      type: integer
                      description: number of female persons
                    educationLevel:
                      type: object
                      description: education level of residents
                      items:
                        type: object
                        properties:
                          edu_prim:
                            type: integer
                          edu_sec:
                            type: integer
                          edu_uni:
                            type: integer
                          edu_noStudies:
                            type: integer
              customisedServiceParameters:
                type: object
                items:
                  type: object
                  properties:
                    OT701:
                      type: string
          example:
                {
                "customerId": "customerId-123",
                "address":
                  {
                  "buildingId": "building-123",
                  "city": "city-123",
                  "cityCode": "cityCode-123",
                  "countryCode": "ES",
                  "country": "Spain",
                  "postalCode": "postalCode-123",
                  "province": "Barcelona",
                  "provinceCode": "provinceCode-123",
                  "parcelNumber": "parcelNumber-123",
                  },
                "meteringPointId": "c1759810-90f3-012e-0404-34159e211070",
                "buildingData":
                  {
                  "buildingConstructionYear": 2014,
                  "dwellingArea": 196,
                  "propertyType": "primary",
                  "buildingType": "Apartment",
                  "dwellingPositionInBuilding": "first_floor",
                  "dwellingOrientation": "SE",
                  "buildingWindowsType": "double_panel",
                  "buildingWindowsFrame": "PVC",
                  "buildingCoolingSource": "electricity",
                  "buildingHeatingSource": "district_heating",
                  "buildingHeatingSourceDhw": "gasoil",
                  "buildingSolarSystem": "solar_thermal_heating"
                  },
                "profile":
                  {
                  "totalPersonsNumber": 3,
                  "minorsPersonsNumber": 0,
                  "workingAgePersonsNumber": 2,
                  "retiredAgePersonsNumber": 1,
                  "malePersonsNumber": 2,
                  "femalePersonsNumber": 1,
                  "educationLevel":
                    {
                    "edu_prim": 0,
                    "edu_sec": 1,
                    "edu_uni": 1,
                    "edu_noStudies": 1
                    }
                  },
                "customisedServiceParameters":
                  {
                  "OT701": "p1;p2;px"
                  }
                }
        devices:
          type: array
          description: metering device
          items:
            type: object
            properties:
              dateStart:
                type: string
                format: date-time
                description: activation date
              dateEnd:
                type: string
                nullable: true
                format: date-time
                description: deactivation date
              devideId:
                type: string
                description: metering device id
          example:
            [{
              "dateStart": "2019-10-11T16:37:05Z",
              "dateEnd": null,
              "deviceId": "c1810810-0381-012d-25a8-0017f2cd3574"
              }]
        report:
          type: object
          description: report
          items:
            type: object
            properties:
              initialMonth:
                type: string
                format: YYYYMM
                description: report month
              language:
                type: string
                description: report language
          example:
            {
              "initialMonth": "201902",
              "language": "ES"
            }
        version:
          type: integer
          description: Contract modification's name
          example: 1
        experimentalGroupUser:
          type: boolean
          description: set to true if the contract is in an experimental group
          example: true
        experimentalGroupUserTest:
          type: boolean
          description: set to true if it is a test
          example: true
    F1:
      type: object
      properties:
        contractId:
          type: string
          description: contract ID
          example: contractId-123
        invoiceId:
          type: string
          description: invoice ID
          example: invoiceId-123
        dateStart:
          type: string
          nullable: true
          format: date-time
          description: invoice start datetime
        dateEnd:
          type: string
          nullable: true
          format: date-time
          description: invoice end date
        tariffId:
          type: string
          description: contracted tariff name
          example: 2.0A
        meteringPointId:
          type: string
          description: metering point ID
          example: "c1759810-90f3-012e-0404-34159e211070"
        devices:
          type: array
          description: metering device
          items:
            type: object
            properties:
              dateStart:
                type: string
                format: date-time
                description: activation date
              dateEnd:
                type: string
                nullable: true
                format: date-time
                description: deactivation date
              deviceId:
                type: string
                description: metering device id
          example:
            [{
              "dateStart": "2019-10-11T16:37:05Z",
              "dateEnd": null,
              "deviceId": "c1810810-0381-012d-25a8-0017f2cd3574"
              }]
        power_measurements:
          type: array
          description: current F1 power information
          items:
            type: object
            properties:
              period:
                type: string
              excess:
                type: number
                format: float
              peak_maximeter:
                type: number
                format: float
              units:
                type: string
            example:
              [
                {
                  period: P1,
                  excess: 0.0,
                  peak_maximeter: 2.0,
                  units: 'kW/dia'
                },
                {
                  period: P2,
                  excess: 0.0,
                  peak_maximeter: 2.0,
                  units: 'kW/dia'
                },
                {
                  period: P3,
                  excess: 0.0,
                  peak_maximeter: 2.0,
                  units: 'kW/dia'
                }
              ]
        reactive_energy_measurements:
          type: array
          description: current F1 reactive energy information
          items:
            type: object
            properties:
              source:
                type: string
              period:
                type: string
              consum:
                type: number
                format: float
              magnitud:
                type: string
              units:
                type: string
            example:
              [
                {
                  source: "Telegestión",
                  period: P1,
                  consum: 2.0,
                  magnitud: "R1",
                  units: 'kVArh'
                },
                {
                  source: "Real",
                  period: P2,
                  consum: 2.0,
                  magnitud: "R1",
                  units: 'kVArh'
                },
              ]
        active_energy_measurements:
          type: array
          description: current F1 active energy information
          items:
            type: object
            properties:
              source:
                type: string
              period:
                type: string
              consum:
                type: number
                format: float
              magnitud:
                type: string
              units:
                type: string
            example:
              [
                {
                  source: "Telegestión",
                  period: P1,
                  consum: 2.0,
                  magnitud: "AE",
                  units: 'kWh'
                },
                {
                  source: "Real",
                  period: P2,
                  consum: 2.0,
                  magnitud: "AE",
                  units: 'kWh'
                },
              ]
        maximeter:
          type: array
          description: current F1 maximeter information
          items:
            type: object
            properties:
              dateStart:
                type: string
              dateEnd:
                type: string
              maxPower:
                type: number
                format: float
              period:
                type: string
            example:
              [
                {
                  dateStart: "2021-06-01",
                  dateEnd: "2021-09-10",
                  maxPower: 4.95,
                  period: "2.0TD (P2)"
                },
                {
                  dateStart: "2021-06-01",
                  dateEnd: "2021-09-10",
                  maxPower: 2.85,
                  period: "2.0TD (P1)"
                },
              ]
    CCH:
      type: object
      description: A point of a tg_cchfact curve
      properties:
        contractId:
          type: string
          description: contract ID
          example: contractId-123
        meteringPointId:
          type: string
          description: cups
          example: "c1759810-90f3-012e-0404-34159e211070"
        season:
          type: number
          format: integer
          description: current season. 0 if it's winter and 1 if it's or summer
          example: 0
        r1:
          type: number
          format: float
          description: first quadrant of reactive energy mesurement (Wh)
          example: 0
        r2:
          type: number
          format: float
          description: second quadrant of reactive energy mesurement (Wh)
          example: 0
        r3:
          type: number
          format: float
          description: third quadrant of reactive energy mesurement (Wh)
          example: 0
        r4:
          type: number
          format: float
          description: fourth quadrant of reactive energy mesurement (Wh)
          example: 0
        ai:
          type: number
          format: float
          description: Input of active energy mesurement (Wh)
          example: 0
        ao:
          type: number
          format: float
          description: Ouput of active energy mesurement (Wh)
          example: 0
        source:
          type: number
          format: integer
          description: "Data collection method.
            It could have the following values:
            1 (Medida real válida);
            2 (Medida perfilada correspondiente a un cierre real);
            3 (Medida real ajustada a un cierre real);
            4 (Medida perfilada correspondiente a auto-lectura de cliente);
            5 (Estimación por consumo histórico del año anterior perfilado);
            6 (Estimación por factor de utilización perfilado)"
          example: 1
        validated:
          type: boolean
          description: True if measurement is validated, False otherwise
          example: True
        date:
          type: string
          format: date
          description: measurement date.
          example: "2020-09-01T16:37:05Z"
        dateDownload:
          type: string
          format: date
          description: file dowloaded at this date
          example: "2020-09-01T16:37:05Z"
        dateUpdate:
          type: string
          format: date
          description: file updated at this date
          example: "2020-09-01T16:37:05Z"
    Tariff:
      type: object
      properties:
        tariffPriceId:
          type: integer
          description: Tariff ID
          example: 123
        prices:
          type: array
          description: prices
          items:
            type: object
            properties:
              current:
                $ref: "#/components/schemas/TariffPrice"
              history:
                type: array
                items:
                  $ref: "#/components/schemas/TariffPrice"
    EnergyIndexedTariff:
      type: object
      properties:
        first_date:
          type: string
          format: date
          description: first date of the tariff
          example: "2020-09-01 16:00:00"
        last_date:
          type: string
          format: date
          description: last date of the tariff
          example: "2020-09-02 13:00:00"
        curves:
          type: object
          description: hourly prices for all hours
          properties:
            geo_zone:
              type: string
              default: "PENINSULA"
              enum:
                - "PENINSULA"
                - "CANARIAS"
                - "BALEARES"
              description: Spanish grid System according to Operator (REE)
              example: "PENINSULA"
            tariff:
              type: string
              enum:
                - "2.0TD"
                - "3.0TD"
                - "3.0TDVE"
                - "6.1TD"
                - "6.1TDVE"
              description: tariff DSO
              example: "2.0TD"
            price_euros_kwh:
              type: array
              description: List of hourly prices from given range (first date - last date)
              items:
                type: float




    SingleContractTariffPrice:
      type: object
      properties:
        current:
          type: object
          description: Current tariff data for a contract
          properties:
            tariffPriceId:
              type: integer
              description: Tariff ID
              example: 123
            prices:
              $ref: "#/components/schemas/TariffPrice"
        history:
          type: array
          description: Historical tariff data for a contract
          items:
            type: object
            properties:
              tariffPriceId:
                type: integer
                description: Tariff ID
                example: 123
              prices:
                type: array
                items:
                  $ref: "#/components/schemas/TariffPrice"
    TariffPrice:
      type: object
      description: A collection of prices for serveral items to apply within a date period
      properties:
        dateStart:
          type: string
          format: date
          description: Tariff price starting date
        dateEnd:
          type: string
          format: date
          description: Tariff price ending date
        activeEnergy:
          type: array
          description: energy price by period
          items:
            $ref: "#/components/schemas/PeriodPrice"
        power:
          type: array
          description: power price by period
          items:
            $ref: "#/components/schemas/PeriodPrice"
        gkwh:
          type: array
          description: generation kWh price by period
          items:
            $ref: "#/components/schemas/PeriodPrice"
        autoconsumo:
          type: array
          description: autocomsumo price by period
          items:
            $ref: "#/components/schemas/PeriodPrice"
        reactiveEnergy:
          type: array
          description: meter price
          items:
            $ref: "#/components/schemas/PriceReactiveEnergy"
        meter:
          type: array
          description: meter price
          items:
            $ref: "#/components/schemas/PeriodPrice"
        bonoSocial:
          type: array
          description: bono social price
          items:
            $ref: "#/components/schemas/PeriodPrice"
        taxes:
          type: array
          description: taxes detail
          items:
            $ref: "#/components/schemas/taxesDetail"
    taxesDetail:
      type: object
      properties:
        name:
          type: string
        dateStart:
          type: number
          format: date
        dateEnd:
          type: number
          format: date
    PeriodPrice:
      type: object
      properties:
        period:
          type: string
        price:
          type: number
          format: float
        units:
          type: string
    PriceReactiveEnergy:
      type: object
      description: All prices for reactive energy
      properties:
        BOE:
          type: array
          description: BOE price
          items:
            type: object
            properties:
              '0 - 0.80':
                type: object
                properties:
                  value:
                    type: number
                    format: float
                  units:
                    type: string
              '0.80 - 0.95':
                type: object
                properties:
                  value:
                    type: number
                    format: float
                  units:
                    type: string
    # ============================
    # Request and Response schemas
    # ============================
    AccessToken:
      type: object
      description: Authentication token definition
      properties:
        access_token:
          type: string
    AuthBody:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    BaseResponse:
      type: object
      properties:
        count:
          type: integer
          description: number of results of this page
        total_results:
          type: integer
          description: total results of this request
    BaseResponseList:
        allOf:
            - $ref: "#/components/schemas/BaseResponse"
            - type: object
              properties:
                next_page:
                  type: string
                  description: url of next results. If null, you are in the last page
                cursor:
                  type: string
                  description: Cursor of the next page.
                  format: byte
    ContractsList:
      allOf:
        - $ref: '#/components/schemas/BaseResponseList'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Contract"
    SingleContract:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/Contract"
    F1sList:
      allOf:
        - $ref: "#/components/schemas/BaseResponseList"
        - type: object
          properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/F1"
    SingleF1:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/F1"
    TariffResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/Tariff"
    ReportResponse:
      type: object
      properties:
        state:
          type: boolean
          description: True if request has been successful
          example: True
        data:
          type: object
          properties:
            reports:
              type: integer
              description: Reports that api has received
            request_id:
              type: string
              description: ID of the request that is processing the reports
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        description:
          type: string
          description: Error description
  examples:
    auth-body-example:
      value:
        username: foo
        password: oyoyoyoy
    auth-response-example:
      value:
        access_token: ouJhbGciOiKUOzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZXhwIjoxNjgwNjE3MzQ5fE.1McmVkc1wLGHhDzTLTH2a4rb-72Gt6AHs3ER2FDlV_0
    badrequest-response-example:
      value:
        error:
          code: bad_request
          message: "Sorry, I couldn't process this request  ¯\_(ツ)_/¯"
    badauthrequest-response-example:
      value:
        error:
          code: bad_request
          message: Missing username or password.
    unauthorized-response-example:
      value:
        error:
          code: unauthorized
          message: Auth required.
    tariff-response-example:
      value: {
        "total_results": 20,
        "count": 20,
        "links": {},
        "data": [
          {
            tariffPriceId: 43,
            prices: {
              "current": {
                "dateStart": "2020-07-01",
                "dateEnd": Null,
                "activeEnergy": [
                  {
                        "period": "P1",
                        "price": 0.127,
                        "units": "€/kWh"
                    }
                ],
                "power": [
                    {
                        "period": "P1",
                        "price": 38.043426,
                        "units": "€/kW year"
                    }
                ],
                "gkwh": [
                    {
                        "period": "P1",
                        "price": 0.11,
                        "units": "€/kWh"
                    }
                ],
                "autoconsumo": [
                    {
                        "period": "P1",
                        "price": 38.043426,
                        "units": "€/kW year"
                    }
                ],
                "reactiveEnergy": {
                  'BOE núm. 312 - 28/12/2018': {
                        '0 - 0.80':
                        {
                          'unit': '€/kVArh',
                          'value': 0.062332
                        },
                        '0.80 - 0.95':
                        {
                          'unit': '€/kVArh',
                          'value': 0.041554
                        }
                  },
                "bonoSocial": {
                  'unit': '€/dia',
                  'value': 0.0
                },
                "meter": {
                  'unit': '€',
                  'value': 0.81
                },
                "taxes": {
                  "name": "tax name",
                  "dateStart": "2021-01-01",
                  "dateEnd": "2023-01-01"
                },
              },
              "history": [
                {
                    "dateStart": "2020-06-01",
                    "dateEnd": "2020-06-30",
                    "activeEnergy": [
                        {
                            "period": "P1",
                            "price": 0.139,
                            "units": "€/kWh"
                        }
                    ],
                    "power": [
                        {
                            "period": "P1",
                            "price": 38.043426,
                            "units": "€/kW year"
                        }
                    ],
                    "gkwh": [
                        {
                            "period": "P1",
                            "price": 0.116,
                            "units": "€/kWh"
                        }
                    ],
                    "autoconsumo": [
                      {
                        "period": "P1",
                        "price": 38.043426,
                        "units": "€/kW year"
                      }
                    ],
                    "reactiveEnergy": {
                      'BOE núm. 312 - 28/12/2018':
                        {
                          '0 - 0.80':
                          {
                            'unit': '€/kVArh',
                            'value': 0.062332
                          },
                          '0.80 - 0.95':
                          {
                            'unit': '€/kVArh',
                            'value': 0.041554
                          }
                      }
                    },
                    "bonoSocial": {
                      'unit': '€/dia',
                      'value': 0.0
                    },
                    "meter": {
                      'unit': '€',
                      'value': 0.81
                    },
                    "taxes": {
                      "name": "tax name",
                      "dateStart": "2021-01-01",
                      "dateEnd": "2023-01-01"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    contracts-response-example:
      value: {
        "count": 1,
        "total_results": 123161,
        "cursor": "ZjliNmQ5YmMtOGI5ZS01ZThkLWExNmQtMzc4Y2RhYjY4ZDE0Ok1RPT0=",
        "next_page": "https://apinergia.somenergia.coop/contracts?cursor=ZjliNmQ5YmMtOGI5ZS01ZThkLWExNmQtMzc4Y2RhYjY4ZDE0Ok1RPT0=&limit=1",
        "data": [
            {
                "activityCode": "9820 - Actividades de los hogares como productores de servicios para uso propio",
                "autoconsumo": "[00] - Sin Autoconsumo",
                "climaticZone": "C2",
                "contractId": "0000004",
                "customer": {
                    "address": {
                        "city": "Barcelona",
                        "cityCode": "08019",
                        "countryCode": "ES",
                        "postalCode": "08036",
                        "province": "Barcelona",
                        "provinceCode": "08"
                    },
                    "buildingData": {
                        "buildingConstructionYear": 1999,
                        "buildingCoolingSource": false,
                        "buildingHeatingSource": "other",
                        "buildingHeatingSourceDhw": false,
                        "buildingSolarSystem": false,
                        "buildingType": "Apartment",
                        "buildingWindowsFrame": "",
                        "buildingWindowsType": false,
                        "dwellingArea": 89,
                        "dwellingOrientation": false,
                        "dwellingPositionInBuilding": false,
                        "propertyType": false
                    },
                    "customerId": "8b1d6e83-882d-59e8-8fc5-fa2348b55f5e",
                    "customisedServiceParameters": {},
                    "meteringPointId": "9d27c82d-73d3-5ce0-b7a5-fcee142acd63",
                    "profile": {
                        "educationLevel": {
                            "edu_noStudies": false,
                            "edu_prim": false,
                            "edu_sec": false,
                            "edu_uni": false
                        },
                        "femalePersonsNumber": false,
                        "malePersonsNumber": false,
                        "minorsPersonsNumber": 0,
                        "retiredAgePersonsNumber": false,
                        "totalPersonsNumber": 3,
                        "workingAgePersonsNumber": false
                    }
                },
                "dateEnd": null,
                "dateStart": "2011-11-22T00:00:00+01:00",
                "devices": [
                    {
                        "dateEnd": null,
                        "dateStart": "2011-12-23T00:00:00+01:00",
                        "deviceId": "ab201f66-4da7-517b-be40-13b7e0de7429"
                    }
                ],
                "experimentalGroupUser": true,
                "experimentalGroupUserTest": false,
                "juridicType": "physicalPerson",
                "ownerId": "8b1d6e83-882d-59e8-8fc5-fa2348b55f5e",
                "payerId": "8b1d6e83-882d-59e8-8fc5-fa2348b55f5e",
                "power": {
                    "P1-2": 3400,
                    "P3": 3400
                },
                "powerHistory": [
                    {
                        "dateEnd": "2019-09-01T00:00:00+02:00",
                        "dateStart": "2011-11-22T00:00:00+01:00",
                        "measurement_point": "05",
                        "power": {
                            "P1": 6600.0
                        }
                    },
                    {
                        "dateEnd": "2021-05-31T00:00:00+02:00",
                        "dateStart": "2019-09-02T00:00:00+02:00",
                        "measurement_point": "05",
                        "power": {
                            "P1": 3400.0
                        }
                    },
                    {
                        "dateEnd": "2023-11-21T00:00:00+01:00",
                        "dateStart": "2021-06-01T00:00:00+02:00",
                        "measurement_point": "05",
                        "power": {
                            "P1-2": 3400.0,
                            "P3": 3400.0
                        }
                    }
                ],
                "power_": {
                    "dateEnd": "2023-11-21T00:00:00+01:00",
                    "dateStart": "2021-06-01T00:00:00+02:00",
                    "measurement_point": "05",
                    "power": {
                        "P1-2": 3400,
                        "P3": 3400
                    }
                },
                "report": {
                    "initialMonth": 201111,
                    "language": "ca_ES"
                },
                "tariffHistory": [
                    {
                        "dateEnd": "2021-05-31T00:00:00+02:00",
                        "dateStart": "2011-11-22T00:00:00+01:00",
                        "tariffId": "2.0A",
                        "tariffPriceId": 4
                    },
                    {
                        "dateEnd": "2023-11-21T00:00:00+01:00",
                        "dateStart": "2021-06-01T00:00:00+02:00",
                        "tariffId": "2.0TD",
                        "tariffPriceId": 101
                    }
                ],
                "tariffId": "2.0TD",
                "tariff_": {
                    "dateEnd": "2023-11-21T00:00:00+01:00",
                    "dateStart": "2021-06-01T00:00:00+02:00",
                    "tariffId": "2.0TD",
                    "tariffPriceId": 101
                },
                "version": 5
            }
        ]
      }
    single-contract-response-example:
      value: {
        "count": 1,
        "data": [
            {
                "activityCode": "9820 - Actividades de los hogares como productores de servicios para uso propio",
                "autoconsumo": "[00] - Sin Autoconsumo",
                "climaticZone": "C2",
                "contractId": "0000004",
                "customer": {
                    "address": {
                        "city": "Barcelona",
                        "cityCode": "08019",
                        "countryCode": "ES",
                        "postalCode": "08036",
                        "province": "Barcelona",
                        "provinceCode": "08"
                    },
                    "buildingData": {
                        "buildingConstructionYear": 1999,
                        "buildingCoolingSource": false,
                        "buildingHeatingSource": "other",
                        "buildingHeatingSourceDhw": false,
                        "buildingSolarSystem": false,
                        "buildingType": "Apartment",
                        "buildingWindowsFrame": "",
                        "buildingWindowsType": false,
                        "dwellingArea": 89,
                        "dwellingOrientation": false,
                        "dwellingPositionInBuilding": false,
                        "propertyType": false
                    },
                    "customerId": "8b1d6e83-882d-59e8-8fc5-fa2348b55f5e",
                    "customisedServiceParameters": {},
                    "meteringPointId": "9d27c82d-73d3-5ce0-b7a5-fcee142acd63",
                    "profile": {
                        "educationLevel": {
                            "edu_noStudies": false,
                            "edu_prim": false,
                            "edu_sec": false,
                            "edu_uni": false
                        },
                        "femalePersonsNumber": false,
                        "malePersonsNumber": false,
                        "minorsPersonsNumber": 0,
                        "retiredAgePersonsNumber": false,
                        "totalPersonsNumber": 3,
                        "workingAgePersonsNumber": false
                    }
                },
                "dateEnd": null,
                "dateStart": "2011-11-22T00:00:00+01:00",
                "devices": [
                    {
                        "dateEnd": null,
                        "dateStart": "2011-12-23T00:00:00+01:00",
                        "deviceId": "ab201f66-4da7-517b-be40-13b7e0de7429"
                    }
                ],
                "experimentalGroupUser": true,
                "experimentalGroupUserTest": false,
                "juridicType": "physicalPerson",
                "ownerId": "8b1d6e83-882d-59e8-8fc5-fa2348b55f5e",
                "payerId": "8b1d6e83-882d-59e8-8fc5-fa2348b55f5e",
                "power": {
                    "P1-2": 3400,
                    "P3": 3400
                },
                "powerHistory": [
                    {
                        "dateEnd": "2019-09-01T00:00:00+02:00",
                        "dateStart": "2011-11-22T00:00:00+01:00",
                        "measurement_point": "05",
                        "power": {
                            "P1": 6600.0
                        }
                    },
                    {
                        "dateEnd": "2021-05-31T00:00:00+02:00",
                        "dateStart": "2019-09-02T00:00:00+02:00",
                        "measurement_point": "05",
                        "power": {
                            "P1": 3400.0
                        }
                    },
                    {
                        "dateEnd": "2023-11-21T00:00:00+01:00",
                        "dateStart": "2021-06-01T00:00:00+02:00",
                        "measurement_point": "05",
                        "power": {
                            "P1-2": 3400.0,
                            "P3": 3400.0
                        }
                    }
                ],
                "power_": {
                    "dateEnd": "2023-11-21T00:00:00+01:00",
                    "dateStart": "2021-06-01T00:00:00+02:00",
                    "measurement_point": "05",
                    "power": {
                        "P1-2": 3400,
                        "P3": 3400
                    }
                },
                "report": {
                    "initialMonth": 201111,
                    "language": "ca_ES"
                },
                "tariffHistory": [
                    {
                        "dateEnd": "2021-05-31T00:00:00+02:00",
                        "dateStart": "2011-11-22T00:00:00+01:00",
                        "tariffId": "2.0A",
                        "tariffPriceId": 4
                    },
                    {
                        "dateEnd": "2023-11-21T00:00:00+01:00",
                        "dateStart": "2021-06-01T00:00:00+02:00",
                        "tariffId": "2.0TD",
                        "tariffPriceId": 101
                    }
                ],
                "tariffId": "2.0TD",
                "tariff_": {
                    "dateEnd": "2023-11-21T00:00:00+01:00",
                    "dateStart": "2021-06-01T00:00:00+02:00",
                    "tariffId": "2.0TD",
                    "tariffPriceId": 101
                },
                "version": 5
            }
        ],
        "total_results": 1
      }
    tariff-price-single-contract-response-example:
      value: {
        "count": 1,
        "total_results": 314,
        "cursor": "MDY1NjlkOWQtY2FmMi01MzQ2LWJiMzEtNjZhMTYyZjVjZjg1Ok1RPT0=",
        "next_page": "https://apinergia.somenergia.coop/modcontracts?cursor=MDY1NjlkOWQtY2FmMi01MzQ2LWJiMzEtNjZhMTYyZjVjZjg1Ok1RPT0=&limit=1",
        "data": [
          "current": {
             "tariffPriceId": 43,
             "prices": {
                "dateStart": "2020-07-01",
                "dateEnd": Null,
                "activeEnergy": [
                  {
                        "period": "P1",
                        "price": 0.127,
                        "units": "€/kWh"
                    }
                ],
                "power": [
                    {
                        "period": "P1",
                        "price": 38.043426,
                        "units": "€/kW year"
                    }
                ],
                "gkwh": [
                    {
                        "period": "P1",
                        "price": 0.11,
                        "units": "€/kWh"
                    }
                ],
                "autoconsumo": [
                    {
                        "period": "P1",
                        "price": 38.043426,
                        "units": "€/kW year"
                    }
                ],
                "reactiveEnergy": {
                  'BOE núm. 312 - 28/12/2018':
                   {
                        '0 - 0.80':
                        {
                          'unit': '€/kVArh',
                          'value': 0.062332
                        },
                        '0.80 - 0.95':
                        {
                          'unit': '€/kVArh',
                          'value': 0.041554
                        }
                  },
                },
              "bonoSocial": {
                'unit': '€/dia',
                'value': 0.0
                },
              "meter": {
                'unit': '€',
                'value': 0.81
                },
              "taxes": {
                "name": "tax name",
                "dateStart": "2021-01-01",
                "dateEnd": "2023-01-01"
              },
            },
          },
          "history":[
            {
            "tariffPriceId": 43,
            "prices": [{
              "dateStart": "2020-06-01",
              "dateEnd": "2020-06-30",
              "activeEnergy": [
                  {
                      "period": "P1",
                      "price": 0.139,
                      "units": "€/kWh"
                  }
              ],
              "power": [
                  {
                      "period": "P1",
                      "price": 38.043426,
                      "units": "€/kW year"
                  }
              ],
              "gkwh": [
                  {
                      "period": "P1",
                      "price": 0.116,
                      "units": "€/kWh"
                  }
              ],
              "autoconsumo": [
                    {
                        "period": "P1",
                        "price": 38.043426,
                        "units": "€/kW year"
                    }
                ],
              "reactiveEnergy": {
                'BOE núm. 312 - 28/12/2018':
                  {
                    '0 - 0.80':
                    {
                      'unit': '€/kVArh',
                      'value': 0.062332
                    },
                    '0.80 - 0.95':
                    {
                      'unit': '€/kVArh',
                      'value': 0.041554
                    }
                }
              },
              "bonoSocial": {
                'unit': '€/dia',
                'value': 0.0
              },
              "meter": {
                'unit': '€',
                'value': 0.81
              },
              "taxes": {
                "name": "tax name",
                "dateStart": "2021-01-01",
                "dateEnd": "2023-01-01"
              },
           }]
          }
        ]
      ]
      }
    modcontracts-response-example:
      value: {
        "count": 1,
        "total_results": 314,
        "cursor": "MDY1NjlkOWQtY2FmMi01MzQ2LWJiMzEtNjZhMTYyZjVjZjg1Ok1RPT0=",
        "next_page": "https://apinergia.somenergia.coop/modcontracts?cursor=MDY1NjlkOWQtY2FmMi01MzQ2LWJiMzEtNjZhMTYyZjVjZjg1Ok1RPT0=&limit=1",
        "data": [
            {
                "activityCode": "9820 - Actividades de los hogares como productores de servicios para uso propio",
                "autoconsumo": "[41] - Con excedentes y compensación Individual - Consumo",
                "climaticZone": "C2",
                "contractId": "0001910",
                "customer": {
                    "address": {
                        "city": "Sabadell",
                        "cityCode": "08187",
                        "countryCode": "ES",
                        "postalCode": "08206",
                        "province": "Barcelona",
                        "provinceCode": "08"
                    },
                    "buildingData": null,
                    "customerId": "b9e8bc8c-ade9-54f9-bb01-3873b49d9769",
                    "customisedServiceParameters": {},
                    "meteringPointId": "dce89f67-1722-55b9-b2e8-868c77740c40",
                    "profile": null
                },
                "dateEnd": null,
                "dateStart": "2012-11-20T00:00:00+01:00",
                "devices": [
                    {
                        "dateEnd": null,
                        "dateStart": "2012-11-20T00:00:00+01:00",
                        "deviceId": "4a15e280-d9e7-571d-b6cd-1a16eabefda9"
                    }
                ],
                "experimentalGroupUser": true,
                "experimentalGroupUserTest": false,
                "juridicType": "physicalPerson",
                "ownerId": "b9e8bc8c-ade9-54f9-bb01-3873b49d9769",
                "payerId": "b9e8bc8c-ade9-54f9-bb01-3873b49d9769",
                "power": {
                    "P1-2": 4500,
                    "P3": 4500
                },
                "powerHistory": [
                    {
                        "dateEnd": "2021-05-31T00:00:00+02:00",
                        "dateStart": "2012-11-20T00:00:00+01:00",
                        "measurement_point": "05",
                        "power": {
                            "P1": 5500.0
                        }
                    },
                    {
                        "dateEnd": "2023-01-08T00:00:00+01:00",
                        "dateStart": "2021-06-01T00:00:00+02:00",
                        "measurement_point": "05",
                        "power": {
                            "P1-2": 5500.0,
                            "P3": 5500.0
                        }
                    },
                    {
                        "dateEnd": "2023-11-19T00:00:00+01:00",
                        "dateStart": "2023-01-09T00:00:00+01:00",
                        "measurement_point": "05",
                        "power": {
                            "P1-2": 4500.0,
                            "P3": 4500.0
                        }
                    }
                ],
                "power_": {
                    "dateEnd": "2023-11-19T00:00:00+01:00",
                    "dateStart": "2023-01-09T00:00:00+01:00",
                    "measurement_point": "05",
                    "power": {
                        "P1-2": 4500,
                        "P3": 4500
                    }
                },
                "report": {
                    "initialMonth": 201211,
                    "language": "ca_ES"
                },
                "tariffHistory": [
                    {
                        "dateEnd": "2021-05-31T00:00:00+02:00",
                        "dateStart": "2012-11-20T00:00:00+01:00",
                        "tariffId": "2.0A",
                        "tariffPriceId": 4
                    },
                    {
                        "dateEnd": "2023-11-19T00:00:00+01:00",
                        "dateStart": "2021-06-01T00:00:00+02:00",
                        "tariffId": "2.0TD",
                        "tariffPriceId": 101
                    }
                ],
                "tariffId": "2.0TD",
                "tariff_": {
                    "dateEnd": "2023-11-19T00:00:00+01:00",
                    "dateStart": "2023-01-09T00:00:00+01:00",
                    "tariffId": "2.0TD",
                    "tariffPriceId": 101
                },
                "version": 5
            }
        ]
      }
    single-modcontract-response-example:
      value: {
        "count": 1,
        "total_results": 1,
        "data": [
            {
                "activityCode": "9820 - Actividades de los hogares como productores de servicios para uso propio",
                "autoconsumo": "[00] - Sin Autoconsumo",
                "climaticZone": "C2",
                "contractId": "0000004",
                "customer": {
                    "address": {
                        "city": "Barcelona",
                        "cityCode": "08019",
                        "countryCode": "ES",
                        "postalCode": "08036",
                        "province": "Barcelona",
                        "provinceCode": "08"
                    },
                    "buildingData": {
                        "buildingConstructionYear": 1999,
                        "buildingCoolingSource": false,
                        "buildingHeatingSource": "other",
                        "buildingHeatingSourceDhw": false,
                        "buildingSolarSystem": false,
                        "buildingType": "Apartment",
                        "buildingWindowsFrame": "",
                        "buildingWindowsType": false,
                        "dwellingArea": 89,
                        "dwellingOrientation": false,
                        "dwellingPositionInBuilding": false,
                        "propertyType": false
                    },
                    "customerId": "8b1d6e83-882d-59e8-8fc5-fa2348b55f5e",
                    "customisedServiceParameters": {},
                    "meteringPointId": "9d27c82d-73d3-5ce0-b7a5-fcee142acd63",
                    "profile": {
                        "educationLevel": {
                            "edu_noStudies": false,
                            "edu_prim": false,
                            "edu_sec": false,
                            "edu_uni": false
                        },
                        "femalePersonsNumber": false,
                        "malePersonsNumber": false,
                        "minorsPersonsNumber": 0,
                        "retiredAgePersonsNumber": false,
                        "totalPersonsNumber": 3,
                        "workingAgePersonsNumber": false
                    }
                },
                "dateEnd": null,
                "dateStart": "2011-11-22T00:00:00+01:00",
                "devices": [
                    {
                        "dateEnd": null,
                        "dateStart": "2011-12-23T00:00:00+01:00",
                        "deviceId": "ab201f66-4da7-517b-be40-13b7e0de7429"
                    }
                ],
                "experimentalGroupUser": true,
                "experimentalGroupUserTest": false,
                "juridicType": "physicalPerson",
                "ownerId": "8b1d6e83-882d-59e8-8fc5-fa2348b55f5e",
                "payerId": "8b1d6e83-882d-59e8-8fc5-fa2348b55f5e",
                "power": {
                    "P1-2": 3400,
                    "P3": 3400
                },
                "powerHistory": [
                    {
                        "dateEnd": "2019-09-01T00:00:00+02:00",
                        "dateStart": "2011-11-22T00:00:00+01:00",
                        "measurement_point": "05",
                        "power": {
                            "P1": 6600.0
                        }
                    },
                    {
                        "dateEnd": "2021-05-31T00:00:00+02:00",
                        "dateStart": "2019-09-02T00:00:00+02:00",
                        "measurement_point": "05",
                        "power": {
                            "P1": 3400.0
                        }
                    },
                    {
                        "dateEnd": "2023-11-21T00:00:00+01:00",
                        "dateStart": "2021-06-01T00:00:00+02:00",
                        "measurement_point": "05",
                        "power": {
                            "P1-2": 3400.0,
                            "P3": 3400.0
                        }
                    }
                ],
                "power_": {
                    "dateEnd": "2023-11-21T00:00:00+01:00",
                    "dateStart": "2021-06-01T00:00:00+02:00",
                    "measurement_point": "05",
                    "power": {
                        "P1-2": 3400,
                        "P3": 3400
                    }
                },
                "report": {
                    "initialMonth": 201111,
                    "language": "ca_ES"
                },
                "tariffHistory": [
                    {
                        "dateEnd": "2021-05-31T00:00:00+02:00",
                        "dateStart": "2011-11-22T00:00:00+01:00",
                        "tariffId": "2.0A",
                        "tariffPriceId": 4
                    },
                    {
                        "dateEnd": "2023-11-21T00:00:00+01:00",
                        "dateStart": "2021-06-01T00:00:00+02:00",
                        "tariffId": "2.0TD",
                        "tariffPriceId": 101
                    }
                ],
                "tariffId": "2.0TD",
                "tariff_": {
                    "dateEnd": "2023-11-21T00:00:00+01:00",
                    "dateStart": "2021-06-01T00:00:00+02:00",
                    "tariffId": "2.0TD",
                    "tariffPriceId": 101
                },
                "version": 5
            }
        ]
      }
    f1s-response-example:
      value: {
        "count": 1,
        "total_results": 54,
        "cursor": "NDBlMGQ2MTMtNWVlOC01NmU1LWI4NWItMWExMjczYTQ1MmIzOk1RPT0=",
        "next_page": "https://apinergia.somenergia.coop/f1?cursor=NDBlMGQ2MTMtNWVlOC01NmU1LWI4NWItMWExMjczYTQ1MmIzOk1RPT0=&limit=1",
        "data": [
            {
                "contractId": "0100790",
                "invoiceId": "5c2f63ca-3eab-5289-93af-d25db6d3f8b9",
                "dateStart": "2023-01-01T00:00:00+01:00",
                "dateEnd": "2023-01-11T00:00:00+01:00",
                "tariffId": "3.0TD",
                "meteringPointId": "9b3f0193-f016-5e6b-ae34-11aeeb06599a",
                "devices": [
                    {
                        "dateStart": "2021-09-15T00:00:00+02:00",
                        "dateEnd": null,
                        "deviceId": "05b2b59c-6504-5773-ad6a-583e53906890"
                    }
                ],
                "power_measurements": [
                    {
                        "period": "P1",
                        "excess": 0.0,
                        "maximeter": 11.0,
                        "units": "kW"
                    },
                    {
                        "period": "P2",
                        "excess": 0.0,
                        "maximeter": 8.0,
                        "units": "kW"
                    },
                    {
                        "period": "P3",
                        "excess": 0.0,
                        "maximeter": 0.0,
                        "units": "kW"
                    },
                    {
                        "period": "P4",
                        "excess": 0.0,
                        "maximeter": 0.0,
                        "units": "kW"
                    },
                    {
                        "period": "P5",
                        "excess": 0.0,
                        "maximeter": 0.0,
                        "units": "kW"
                    },
                    {
                        "period": "P6",
                        "excess": 0.0,
                        "maximeter": 11.0,
                        "units": "kW"
                    }
                ],
                "reactive_energy_measurements": [
                    {
                        "source": "TPL",
                        "period": "P1",
                        "consum": 0,
                        "units": "kVArh"
                    },
                    {
                        "source": "TPL",
                        "period": "P2",
                        "consum": 2,
                        "units": "kVArh"
                    },
                    {
                        "source": "TPL",
                        "period": "P3",
                        "consum": 0,
                        "units": "kVArh"
                    },
                    {
                        "source": "TPL",
                        "period": "P4",
                        "consum": 0,
                        "units": "kVArh"
                    },
                    {
                        "source": "TPL",
                        "period": "P5",
                        "consum": 0,
                        "units": "kVArh"
                    },
                    {
                        "source": "TPL",
                        "period": "P6",
                        "consum": 5,
                        "units": "kVArh"
                    }
                ],
                "active_energy_measurements": [
                    {
                        "source": "TPL",
                        "period": "P1",
                        "consum": 143,
                        "units": "kWh"
                    },
                    {
                        "source": "TPL",
                        "period": "P2",
                        "consum": 171,
                        "units": "kWh"
                    },
                    {
                        "source": "TPL",
                        "period": "P3",
                        "consum": 0,
                        "units": "kWh"
                    },
                    {
                        "source": "TPL",
                        "period": "P4",
                        "consum": 0,
                        "units": "kWh"
                    },
                    {
                        "source": "TPL",
                        "period": "P5",
                        "consum": 0,
                        "units": "kWh"
                    },
                    {
                        "source": "TPL",
                        "period": "P6",
                        "consum": 569,
                        "units": "kWh"
                    }
                ],
                "maximeter": []
            }
        ],
      }
    f1s-single-contract-response-example:
      value: {
        "count": 2,
        "total_results": 100,
        "cursor": "MWMwMjBlMjktNzA5OS01OTIwLWJkY2UtOWJiMWQ2ZGE1ZDJkOk5UQT0=",
        "next_page": "https://apinergia.somenergia.coop/f1/0000004?cursor=MWMwMjBlMjktNzA5OS01OTIwLWJkY2UtOWJiMWQ2ZGE1ZDJkOk5UQT0=&limit=2",
        "data": [
            {
                "contractId": "0000004",
                "invoiceId": "f87516b3-b427-5691-83e0-ee5d0d8d590b",
                "dateStart": "2022-11-14T00:00:00+01:00",
                "dateEnd": "2022-12-13T00:00:00+01:00",
                "tariffId": "2.0TD",
                "meteringPointId": "9d27c82d-73d3-5ce0-b7a5-fcee142acd63",
                "devices": [
                    {
                        "dateStart": "2011-12-23T00:00:00+01:00",
                        "dateEnd": null,
                        "deviceId": "ab201f66-4da7-517b-be40-13b7e0de7429"
                    }
                ],
                "power_measurements": [],
                "reactive_energy_measurements": [],
                "active_energy_measurements": [
                    {
                        "source": "Telegesti\u00f3",
                        "period": "P1",
                        "consum": 57,
                        "units": "kWh"
                    },
                    {
                        "source": "Telegesti\u00f3",
                        "period": "P2",
                        "consum": 74,
                        "units": "kWh"
                    },
                    {
                        "source": "Telegesti\u00f3",
                        "period": "P3",
                        "consum": 71,
                        "units": "kWh"
                    }
                ],
                "maximeter": [
                    {
                        "dateStart": "2022-01-01",
                        "dateEnd": "2022-12-13",
                        "maxPower": 4.32,
                        "period": "2.0TD (P1)"
                    },
                    {
                        "dateStart": "2022-01-01",
                        "dateEnd": "2022-12-13",
                        "maxPower": 4.772,
                        "period": "2.0TD (P2)"
                    }
                ]
            },
            {
                "contractId": "0000004",
                "invoiceId": "bc1fad9e-1cfc-5f5c-96b4-6b59ef92c9db",
                "dateStart": "2022-10-15T00:00:00+02:00",
                "dateEnd": "2022-11-13T00:00:00+01:00",
                "tariffId": "2.0TD",
                "meteringPointId": "9d27c82d-73d3-5ce0-b7a5-fcee142acd63",
                "devices": [
                    {
                        "dateStart": "2011-12-23T00:00:00+01:00",
                        "dateEnd": null,
                        "deviceId": "ab201f66-4da7-517b-be40-13b7e0de7429"
                    }
                ],
                "power_measurements": [],
                "reactive_energy_measurements": [],
                "active_energy_measurements": [
                    {
                        "source": "Telegesti\u00f3",
                        "period": "P1",
                        "consum": 31,
                        "units": "kWh"
                    },
                    {
                        "source": "Telegesti\u00f3",
                        "period": "P2",
                        "consum": 41,
                        "units": "kWh"
                    },
                    {
                        "source": "Telegesti\u00f3",
                        "period": "P3",
                        "consum": 68,
                        "units": "kWh"
                    }
                ],
                "maximeter": [
                    {
                        "dateStart": "2021-11-13",
                        "dateEnd": "2022-11-13",
                        "maxPower": 4.32,
                        "period": "2.0TD (P1)"
                    },
                    {
                        "dateStart": "2021-11-13",
                        "dateEnd": "2022-11-13",
                        "maxPower": 4.772,
                        "period": "2.0TD (P2)"
                    }
                ]
            }
        ],
      }
    tgcchfact-response-example:
      value: {
          "count": 1,
          "cursor": "NWY4NTA2ZGEtM2JlNC01MGE0LThiZjEtZWQyZjhiODA1Zjc0Ok13PT0=",
          "data": [
              {
                  "contractId": "0000004",
                  "measurements": {
                      "ai": 68,
                      "ao": 0,
                      "date": "2022-11-14 01:00:00+0000",
                      "dateDownload": "2022-12-18 02:29:49",
                      "dateUpdate": "2022-12-18 02:29:49",
                      "r1": 0,
                      "r2": 0,
                      "r3": 0,
                      "r4": 0,
                      "season": 0,
                      "source": 1,
                      "validated": true
                  },
                  "meteringPointId": "9d27c82d-73d3-5ce0-b7a5-fcee142acd63"
              }
          ],
          "next_page": "https://apinergia.somenergia.coop/cch/0000004?type=tg_cchfact&cursor=NWY4NTA2ZGEtM2JlNC01MGE0LThiZjEtZWQyZjhiODA1Zjc0Ok13PT0=&limit=1",
          "total_results": 720
      }
    tgcchval-response-example:
      value: {
        "count": 1,
        "cursor": "YTMwZDJlMTYtYzcxMi01ODlkLTkzNzAtNWY4YTU5MWVmY2NiOk1RPT0=",
        "data": [
            {
                "contractId": "0000004",
                "measurements": {
                    "ai": 599,
                    "ao": 0,
                    "date": "2022-11-27 23:00:00+0000",
                    "dateDownload": "2022-12-01 03:35:25",
                    "dateUpdate": "2022-12-01 03:35:25",
                    "season": 0
                },
                "meteringPointId": "9d27c82d-73d3-5ce0-b7a5-fcee142acd63"
            }
        ],
        "next_page": "https://apinergia.somenergia.coop/cch/0000004?type=tg_cchval&cursor=YTMwZDJlMTYtYzcxMi01ODlkLTkzNzAtNWY4YTU5MWVmY2NiOk1RPT0=&limit=1",
        "total_results": 1128
      }
    tgf1-response-example:
      value: {
        "count": 1,
        "cursor": "MTY4Nzg2ZDYtZmJmYy01ZDYzLWJiNzktZTc5MGFmYjY2YzAwOk1RPT0=",
        "data": [
            {
                "contractId": "0222511",
                "measurements": {
                    "ai": 163.0,
                    "ao": 0.0,
                    "date": "2022-11-29 00:00:00+0000",
                    "dateDownload": "2022-12-23 12:02:31",
                    "dateUpdate": "2022-12-23 12:02:31",
                    "measureType": 11,
                    "r1": 0.0,
                    "r2": 0.0,
                    "r3": 0.0,
                    "r4": 0.0,
                    "reserve1": 0.0,
                    "reserve2": 0.0,
                    "season": 0,
                    "source": 8,
                    "validated": false
                },
                "meteringPointId": "ffd5b061-4999-5ad5-a248-8e444deee2e1"
            }
        ],
        "next_page": "https://apinergia.somenergia.coop/cch/0222511?type=tg_f1&cursor=MTY4Nzg2ZDYtZmJmYy01ZDYzLWJiNzktZTc5MGFmYjY2YzAwOk1RPT0=&limit=1",
        "total_results": 47
      }
    p1-response-example:
      value: {
        "count": 1,
        "cursor": "MTQwNzIyMzktNzlmMS01YjcxLTk4ZTUtMWI1MjMzOTY1MWVhOk1RPT0=",
        "data": [
            {
                "contractId": "0217828",
                "measurements": {
                    "ai": 0.0,
                    "aiquality": 0,
                    "ao": 0.0,
                    "aoQuality": 0,
                    "date": "2022-11-23 23:00:00+0000",
                    "dateDownload": "2022-12-01 03:56:28",
                    "dateUpdate": "2022-12-01 03:56:28",
                    "measureType": 11,
                    "r1": 0.0,
                    "r1Quality": 0,
                    "r2": 0.0,
                    "r2Quality": 0,
                    "r3": 0.0,
                    "r3Quality": 0,
                    "r4": 1.0,
                    "r4Quality": 0,
                    "reserve1": 0.0,
                    "reserve1Quality": 0,
                    "reserve2": 0.0,
                    "reserve2Quality": 0,
                    "season": 0,
                    "source": 1,
                    "type": "p",
                    "validated": false
                },
                "meteringPointId": "a9fef2ae-fadc-55f6-87c4-e70018b7cfc8"
            }
        ],
        "next_page": "https://apinergia.somenergia.coop/cch/0217828?type=P1&cursor=MTQwNzIyMzktNzlmMS01YjcxLTk4ZTUtMWI1MjMzOTY1MWVhOk1RPT0=&limit=1",
        "total_results": 1248
      }
    p2-response-example:
      value: {
        "count": 1,
        "cursor": "NDdhYjk0NTctMDY2OC01NjhlLTk5ZWMtNDhlMjZiMTVkNDkwOk1RPT0=",
        "data": [
            {
                "contractId": "0100752",
                "measurements": {
                    "ai": 1.0,
                    "aiquality": 0,
                    "ao": 0.0,
                    "aoQuality": 0,
                    "date": "2021-12-30 22:00:00+0000",
                    "dateDownload": "2022-01-01 03:39:32",
                    "dateUpdate": "2022-01-01 03:39:32",
                    "measureType": 11,
                    "r1": 2.0,
                    "r1Quality": 0,
                    "r2": 0.0,
                    "r2Quality": 0,
                    "r3": 0.0,
                    "r3Quality": 0,
                    "r4": 0.0,
                    "r4Quality": 0,
                    "reserve1": 0.0,
                    "reserve1Quality": 0,
                    "reserve2": 0.0,
                    "reserve2Quality": 0,
                    "season": 0,
                    "source": 1,
                    "type": "p4",
                    "validated": false
                },
                "meteringPointId": "7b1485ad-91db-5526-854a-4b0af1a81d4d"
            }
        ],
        "next_page": "https://apinergia.somenergia.coop/cch/0100752?type=P2&cursor=NDdhYjk0NTctMDY2OC01NjhlLTk5ZWMtNDhlMjZiMTVkNDkwOk1RPT0=&limit=1",
        "total_results": 36576
      }
    report-response-example:
      value: {
        "state": True,
        "data": {
          "reports": 5,
          "request_id": "2354tydssds"
        }
      }
